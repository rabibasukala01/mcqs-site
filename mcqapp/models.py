from django.db import models
import uuid
from django.contrib.auth.models import User


# Create your models here.

"""
extending user fields
"""


class Points(models.Model):
    user = models.OneToOneField(User, on_delete=models.CASCADE)
    points = models.IntegerField(default=0)

    def __str__(self):
        return self.user.username


"""
models to add question by  admins
"""


class Questions(models.Model):
    question_text = models.CharField(max_length=500)
    qid = models.UUIDField(default=uuid.uuid4, editable=False, unique=True)
    option1 = models.CharField(max_length=300)
    option2 = models.CharField(max_length=300)
    option3 = models.CharField(max_length=300)
    option4 = models.CharField(max_length=300)
    correct_answer = models.CharField(max_length=300)
    category = models.ForeignKey("Category", on_delete=models.CASCADE)

    def __str__(self):
        return self.question_text


"""
model to add/hold contributer's questions in unstaging area.wait for reject or accept
"""


class QuestionsADD(models.Model):
    question_text = models.CharField(max_length=500)
    qid = models.UUIDField(default=uuid.uuid4, editable=False, unique=True)
    option1 = models.CharField(max_length=300)
    option2 = models.CharField(max_length=300)
    option3 = models.CharField(max_length=300)
    option4 = models.CharField(max_length=300)
    correct_answer = models.CharField(max_length=300)
    who_added = models.CharField(max_length=300, default="anonymous")
    category = models.ForeignKey(
        "Category", on_delete=models.CASCADE
    )  # it got category_id auto generated so use it as name suggest

    def __str__(self):
        return self.question_text + "-" + str(self.qid)


class Category(models.Model):
    # id is auto generated by django
    # use id directly as name
    category_name = models.CharField(max_length=300)

    def __str__(self):
        return self.category_name + "-id " + str(self.id)
